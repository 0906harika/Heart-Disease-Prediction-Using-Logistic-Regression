import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import pylab as pl
import scipy.optimize as opt
import statsmodels.api as sm
from sklearn import preprocessing
import matplotlib.mlab as mlab
import seaborn as sns
df=pd.read_csv('/content/framingham.csv')
df
df.drop(['education'],inplace=True,axis=1)
df.rename(columns={'male':'Sex_male'},inplace=True)
df.dropna(axis=0,inplace=True)
df.head()
df.shape
df.TenYearCHD.value_counts()
x=np.asarray(df[['age','Sex_male','cigsPerDay','totChol','sysBP','glucose']])
y=np.asarray(df['TenYearCHD'])
x=preprocessing.StandardScaler().fit(x).transform(x)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=4)
print("Train Set",x_train.shape,y_train.shape)
print("Test Set",x_test.shape,y_test.shape)
plt.figure(figsize=(7,5))
sns.countplot(x='TenYearCHD',data=df,palette='BuGn_r')
plt.show()
laste=df['TenYearCHD'].plot()
plt.show(laste)
from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression()
classifier.fit(x_train,y_train)
y_pred=classifier.predict(x_test)
from sklearn.metrics import accuracy_score
print("Accuracy:",accuracy_score(y_test,y_pred))
from sklearn.metrics import classification_report,confusion_matrix
cm=confusion_matrix(y_test,y_pred)
conf=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted: 1'],index=['Actual:0','Actual:1'])
cm
conf
plt.figure(figsize=(8,5))
sns.heatmap(conf,annot=True,fmt='d',cmap='Greens')
plt.show()
print("The details of confusion maatrix is =")
print(classification_report(y_test,y_pred))
